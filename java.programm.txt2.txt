1a.write a java program that takes number as input&prints its multiplication table upto 10
 import  java.utili.Scanner;
class  procia{
public static void main(String[ ]args){
Scanner sc=new Scanner(System.\n);
System.out.print("enter no : ");
int i,n,mul;
n=sc.next Int( );
System.out.println("Multiplication tabel:");
for(i=0;i<=10;i++){
mul=n*i;
System.out.print(n+"x"+i+"="+mul);
     }
   }
} 
 
1b. write a java program to print following pattern
 import  java.utili.Scanner;
class  procib{
public static void main(String[ ]args){
Scanner sc=new Scanner(System.in);
int i,j,n;
System.out.print("enter no : ");
n=sc.next Int( );
for(i=n;i<=1; i- -){
for(j=1;j<=n-1; j++){
System.out.print(" ");
   }
System.out.print\n( );
     }
   }
} 

1c.write a java program to print area & parameter of circle
 import  java.utili.Scanner;
class  procic{
public static void main(String[ ]args){
Scanner sc=new Scanner(System.in);
double radius,area,parameter
System.out.print("Enter radius:");
radius=sc.next Double( );
area=Math.pi*math.paw(radius,2);
parameter=2*math.pi*radius;
System.out.println("Area of circle:"+area);
System.out.print("parameter of circle:" + parameter):
 }
}

2a.write a java program to convert a decimal number to binary number
 import  java.utili.Scanner;
class  proc2a{
public static void main(String[ ]args){
Scanner sc=new Scanner(System.in);
int decimal,i,index=0;
int binary[ ]=new int[ 40];
System.out.print("enter no: ");
decimal=sc.nextInt( );
while(decimal>0)
{
    binary[ index++]=decimal % 2;
    decimal/=2;
}
System.out.println("Binary no: ");
For(i=index-1;i>=0;i- -)
{
   System.out.println(binary[i]);
     }
   }
}

2b.write a java program to reverse a String
 import  java.utili.Scanner;
class  proc2b{
public static void main(String[ ]args){
Scanner sc=new Scanner(System.in);
String str,rstr= " ";
System.out.print("Enter String: ");
str=sc.next Line();
char ch;
For(int i=0; i<str.length();i++)
{
    ch=str.charAt(i);
    rstr=ch+rstr;
}
System.out.println("Reverse of Striing :" +rstr);
 }
}

3a.write a java program to count letters, spaces,number and other characters of an input String
 import  java.utili.Scanner;
class  proc3a{
public static void main(String[ ]args){
Scanner sc=new Scanner(System.in);
String str;
System.out.print("Enter String: ");
str=sc.next Line();
int letter=0, space=0, number=0,special=0;
char chstr[ ]=str.to charArray( );
For(int i=0; i<chstr.length; i++)
{
    if(Character.is letter(chstr[i]))
{
    letter++;
}
else if (Character.isSpace(chstr[i]))
{
    Space++;
}
else if (Character.is Digit(chstr[i]) )
{
    number++;
}
else
{
  Special++;
}
System.out.println(" letter:"+letter+"\nSpace:"+space+"\n Number: "+number+"\n Spacial:"+Special);
   }
}
 
3b.implement java function that calculates the sum of digits for char array consisting of digits 0 to 9 this function should return the diigit sum as long value
import  java.util.Scanner; 
class Sum_Array
{
	public long Sum_Digit (String str)
	{
		long sum = 0L;
		char ch_num[]=str.toCharArray();
		for(int i=0;i<ch_num.length;i++)
		{
			if(Character.isDigit(ch_num[i]))
			{
				sum=sum+Character.getNumericValue(ch_num[i]);
			}
		}
		return sum;
	}
}

class Main_sum
{
	public static void main(String[]args)
	{
		Sum_Array sa=new Sum_Array();
		long total=sa.Sum_Digit("12345");
		System.out.println("Sum="+total);
	}
}
  
3c.write a java program to find smallest & largest element from the array
import java.util.Scanner
class find_Array
{
	public static void main(String[]args)
	{
		int i,j,temp;
		int arr[]=new int[]{9,5,2,1,4};
		for(i=0;i<arr.length;i++)
		{
			for(j=i+1;j<arr.length;j++)
			{
				if(arr[i]>=arr[j])
				{
					temp=arr[i];
					arr[i]=arr[j];
					arr[j]=temp;
				}
			}
		}
	System.out.println("Smallest=" +arr[0]+" Largest="+arr[arr.length-1]);
	}
}

4a.Design a class sortdata that contains method asecending & descending( )
import java.util.Scanner;
class SortData { 
    int arr[];
    int temp, i, j;

    public void takeInput() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of elements: ");
        int n = scanner.nextInt();

        arr = new int[n];bfbfbfbfbdndhrtjr jyj5u6 yy 5 

        System.out.println("Enter the elements:");

        for (i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        scanner.close();
    }

    public void asec() {
        for (i = 0; i < arr.length; i++) {
            for (j = i + 1; j < arr.length; j++) {
                if (arr[i] > arr[j]) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        System.out.println("Sorted array in ascending order:");
        for (i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println(); // Add a new line after printing the array
    }

    public void desc() {
        for (i = 0; i < arr.length; i++) {
            for (j = i + 1; j < arr.length; j++) {
                if (arr[i] < arr[j]) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        System.out.println("Sorted array in descending order:");
        for (i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println(); // Add a new line after printing the array
    }

    public static void main(String[] args) {
        SortData obj = new SortData();
        obj.takeInput();
        obj.asec();
        obj.desc();
    }
}

4b.Design a clas that demonstrate use of constructor & destructor
class student
{
    int id,age;
    String name;
    student(int i,String n)
    {
        id=i;
        name=n;
    }
    student(int i,String n,int age)
    {
        id=i;
        name=n;
        this.age=age;
    }
    student(student S)
    {
        id=S.id;
        name=S.name;
    }
    void display()
    {
        System.out.println("id: "+id+" Name: "+name+" Age: "+age);
    }
    protected void finalize()
    {
        System.out.println("Object destroyed");
    }
}
4c.write a java program to demonstrate implementation of abstract class
class student_Main
{
    public static void main(String[] args)
    {
        student s1=new student(101,"alice");
        student s2=new student(102,"bob",18);
        student s3=new student(103,"carl",20);
        student s4=new student(s2);
        s1.display();
        s2.display();
        s3.display();
        s4.display();
        s1=null;
        System.gc();
       
    }
}

abstract class Addition {
    public abstract void add();

    void Message() {
        System.out.println("I am a Non-Abstract Method");
    }
}

class int_Add extends Addition

{
    public void add() {
        int a = 5, b = 4;
        System.out.println("Addition of two numbers: " + (a + b));
    }
}

class str_Add extends Addition {
    public void add() {
        String str1 = "Hello", str2 = "world";
        System.out.println("Addition of Strings: " + (str1+" "+str2));
    }
}

class abstractDemo {
    public static void main(String[] args) {
        int_Add obj1 = new int_Add();
        str_Add obj2 = new str_Add();
        obj1.add();
        obj2.add();
        obj1.Message();
        // obj2.Message();
    }
}

5a.write a java program to implement single level inheritance
class calcOne {
    public int add(int x, int y) {
        return (x + y);
    }

    public int subtract(int x, int y) {
        return (x - y);
    }
}

class calcTwo extends calcOne {
    public int multiply(int x, int y) {
        return (x * y);
    }

    public float divide(int x, int y) {
        return (x / y);
    }
}

5b.write a java program to implement method overriding
class inheritanceDemo {
    public static void main(String[] args) {
        calcTwo obj = new calcTwo();
        System.out.println("Addition: " + obj.add(5, 6));
        System.out.println("Subtraction: " + obj.subtract(10, 5));
        int mul = obj.multiply(12, 2);
        float div = obj.divide(10, 2);
        System.out.println("Multiplication: " + mul + "\nDivision: " + div);
    }
}
5c.write a java program to implement multiple inheritance
class parent
{
    void show()
    {
        System.out.println("Parent show()");
    }
}
class child extends parent
{
    void show()
    {
        System.out.println("Child show()");
    }
}
class overrideDemo
{
    public static void main(String[] args)
    {
        parent obj1=new parent();
        obj1.show();
        parent obj2=new child();
        obj2.show();
    }
}

interface IArea {
    float pi = 3.14f;

    float areaCircle();

    float areaSphere();
}

abstract class abVolume {
    public final float pi = 3.14f;

    abstract float volCylinder();
}

class areaVolume extends abVolume implements IArea {

    public float volCylinder() {
        int r = 10, h = 5;
        return (IArea.pi * r * r * h);
    }

    public float areaCircle() {
        int r = 10;
        return (IArea.pi * r * r);
    }

    public float areaSphere() {
        int r = 10;
        return (4 * IArea.pi * r * r);
    }
}

class multipleInheritance {
    public static void main(String[] args) {
        IArea cir = new areaVolume();
        System.out.println("Area of circle: " + cir.areaCircle());
        IArea sph = new areaVolume();
        System.out.println("Area of Sphere: " + sph.areaSphere());
        abVolume cylin = new areaVolume();
        System.out.println("Area of cylinder: " + cylin.volCylinder());
    }
}

6a. create a package .add the necessary  classes & import package in java class
(Simple.java)
package mypack;
public class Simple
{
 public void display()
{
 System.out.println("hello from mypack simple class");
}
}

(Simple2.java)
package mypack;
public class simple2
{
    System.out.println("hello from my pack Simple class");
    (package Demo.java)
    import mypack.Simple;
    import mypack.Simple2;
class packageDemo
{
    public static void main(String[ ]args)
{
    Simple obj=new  simple();
    obj.display();
    Simple2obj1=new simple2();
   obj.display();
   }
}

6b.write a java program to add two matrices & print the resultant matrix
class matrixAdd
{
    public static void main(String[] args)
    {
        int i,j;
        int sumat[][]=new int[3][3];
        int mat1[][]={{1,1,1},{2,2,2},{3,3,3}};
        int mat2[][]={{1,1,1},{2,2,2},{3,3,3}};
        System.out.println("matrix1: ");
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(mat1[i][j]+"\t");
            }
            System.out.println();
        }
        System.out.println("\nmatrix2: ");
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(mat2[i][j]+"\t");
            }
            System.out.println();
        }
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                sumat[i][j]=mat1[i][j]+mat2[i][j];
            }
        }
        System.out.println("\nResultant matrix: ");
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(sumat[i][j]+"\t");
            }
            System.out.println();
        }
    }
}

6c.write a java program for multiplying two matrices & print the product of the same
class matrixmultiplication
{
    public static void main(String[] args)
    {
        int i,j,k;
        int r[][]=new int[3][3];
        int matrix1[][]={{1,1,1},{2,2,2},{3,3,3}};
        int matrix2[][]={{1,1,1},{2,2,2},{3,3,3}};
        System.out.println("First matirx: ");
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(matrix1[i][j]+"\t");
            }
            System.out.println();
        }
        System.out.println("\nSecond matrix: ");
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                System.out.print(matrix2[i][j]+"\t");
            }
            System.out.println();
        }
        System.out.println("\nResultant matrix: ");
        for(i=0;i<3;i++)
        {
            for(j=0;j<3;j++)
            {
                r[i][j]=0;
                for(k=0;k<3;k++)
                {
                    r[i][j]+=matrix1[i][k]*matrix2[k][j];
                }
                System.out.print(r[i][j]+"\t");
            }
            System.out.println();
        }
    }
}
7a.write a java program to implement vector
import java.util.*;
class VectorDemo
{
	public static void main (String[] args)
	{	
		
		Vector<String> books= new Vector<String>();
		System.out.println("\nInitial Capacity="+books.capacity()+"\nInitial size="+books.size());

		books.addElement("Core Java 8");
		books.addElement("Intoduction to ES");
		books.addElement("A practical approach using R");
		books.addElement("HTML 5 Step-by-Step");
		books.addElement("Data Structure Using C and C++");
		books.addElement("Think Python");
		books.addElement("Database System");
		books.addElement("Computer networks");
	//	System.out.println("Original Vector - "+books);
		System.out.println("Original Vector:");
		for(int i=0; i<books.size();i++)
		{
			System.out.println(books.get(i));
		}
		System.out.println("\nCurrent Vector size - "+ books.size());
		books.insertElementAt("SE- A Concise Approach", 2);
		books.insertElementAt("Mathematical Elements for CG", 4);
		books.insertElementAt("Computer System Architecture", 9);
		System.out.println("\nVector after Insertion: ");
		for(int i=0; i<books.size();i++)
		{
			System.out.println(books.get(i));
		}
		System.out.println("\nCurrent Capacity="+books.capacity()+"\nCurrent size="+books.size());

		System.out.println("\nThe last element is - "+books.lastElement());
		System.out.println("\nDoes the vector contain Core Java 8?  "+books.contains("Core Java 8"));
		System.out.println("\nDoes the vector contain Physics? "+books.contains("Physics"));
		System.out.println("\nSize of vector - "+books.size());
		System.out.println("\nElement at index 5 - "+ books.elementAt(5));
		books.setSize(13);
		System.out.println("\nVector of for setting size: "+books);
		books.setSize(4);
		System.out.println("\nVector after setting lesser size: "+books);

	}
}

7b.wriite a java program to implement thread lifecycle
import java.util.*;
class VectorDemo
{
	public static void main (String[] args)
	{	
		
		Vector<String> books= new Vector<String>();
		System.out.println("\nInitial Capacity="+books.capacity()+"\nInitial size="+books.size());

		books.addElement("Core Java 8");
		books.addElement("Intoduction to ES");
		books.addElement("A practical approach using R");
		books.addElement("HTML 5 Step-by-Step");
		books.addElement("Data Structure Using C and C++");
		books.addElement("Think Python");
		books.addElement("Database System");
		books.addElement("Computer networks");
		System.out.println("Original Vector - "+books);
		System.out.println("Original Vector:");
		for(int i=0; i<books.size();i++)
		{
			System.out.println(books.get(i));
		}
		System.out.println("\nCurrent Vector size - "+ books.size());
		books.insertElementAt("SE- A Concise Approach", 2);
		books.insertElementAt("Mathematical Elements for CG", 4);
		books.insertElementAt("Computer System Architecture", 9);
		System.out.println("\nVector after Insertion: ");
		for(int i=0; i<books.size();i++)
		{
			System.out.println(books.get(i));
		}
		System.out.println("\nCurrent Capacity="+books.capacity()+"\nCurrent size="+books.size());

		System.out.println("\nThe last element is - "+books.lastElement());
		System.out.println("\nDoes the vector contain Core Java 8?  "+books.contains("Core Java 8"));
		System.out.println("\nDoes the vector contain Physics? "+books.contains("Physics"));
		System.out.println("\nSize of vector - "+books.size());
		System.out.println("\nElement at index 5 - "+ books.elementAt(5));
		books.setSize(13);
		System.out.println("\nVector of for setting size: "+books);
		books.setSize(4);
		System.out.println("\nVector after setting lesser size: "+books);

	}
}

7c.write a java program to implement muilt thread
import java.util.*;
class VectorDemo
{
	public static void main (String[] args)
	{	
		
		Vector<String> books= new Vector<String>();
		System.out.println("\nInitial Capacity="+books.capacity()+"\nInitial size="+books.size());

		books.addElement("Core Java 8");
		books.addElement("Intoduction to ES");
		books.addElement("A practical approach using R");
		books.addElement("HTML 5 Step-by-Step");
		books.addElement("Data Structure Using C and C++");
		books.addElement("Think Python");
		books.addElement("Database System");
		books.addElement("Computer networks");
	//	System.out.println("Original Vector - "+books);
		System.out.println("Original Vector:");
		for(int i=0; i<books.size();i++)
		{
			System.out.println(books.get(i));
		}
		System.out.println("\nCurrent Vector size - "+ books.size());
		books.insertElementAt("SE- A Concise Approach", 2);
		books.insertElementAt("Mathematical Elements for CG", 4);
		books.insertElementAt("Computer System Architecture", 9);
		System.out.println("\nVector after Insertion: ");
		for(int i=0; i<books.size();i++)
		{
			System.out.println(books.get(i));
		}
		System.out.println("\nCurrent Capacity="+books.capacity()+"\nCurrent size="+books.size());

		System.out.println("\nThe last element is - "+books.lastElement());
		System.out.println("\nDoes the vector contain Core Java 8?  "+books.contains("Core Java 8"));
		System.out.println("\nDoes the vector contain Physics? "+books.contains("Physics"));
		System.out.println("\nSize of vector - "+books.size());
		System.out.println("\nElement at index 5 - "+ books.elementAt(5));
		books.setSize(13);
		System.out.println("\nVector of for setting size: "+books);
		books.setSize(4);
		System.out.println("\nVector after setting lesser size: "+books);

	}
}
8a.Design a awt program to print the Factoral for an input value
import java.awt.*;
import java.awt.event.*;
class AWT_Factorial extends WindowAdapter implements ActionListener
{
	Frame f;
	Label lblInput;
	TextField txtNum,txtDisp;
	Button btnFact;
	Label lblDisp;
	Panel p;
	public AWT_Factorial()
	{
		f=new Frame("Calculate Factorial");
		p=new Panel();
		lblInput=new Label("Enter a number");
		txtNum=new TextField(5);
		lblDisp=new Label("Factorial=");
		txtDisp=new TextField(10);
		txtDisp.setEditable(false);
		btnFact=new Button("Calculate Factorial");
	
		p.add(lblInput);
		p.add(txtNum);
		p.add(btnFact);
		p.add(lblDisp);
		p.add(txtDisp);
		f.add(p);
		btnFact.addActionListener(this);
		f.setLayout(new FlowLayout());
		f.setSize(300,300);
		f.setVisible(true);
		f.addWindowListener(this);
	}
	public void actionPerformed(ActionEvent ae)
	{
			int num=Integer.parseInt(txtNum.getText());
			System.out.println(ae.getSource());
			int fact=1;
			for(int i=1;i<=num;i++)
			{
				fact*=i;
			}
			txtDisp.setText(Integer.toString(fact));
	}
	public void windowClosing(WindowEvent we)
	{ 
                System.exit(0);
	}
	public static void main(String[] args)
	{
		new AWT_Factorial();
	}
}

8b..Design a awt program to program to perform various string operations like reverse String & String concaternation
import java.awt.*;
import java.awt.event.*;
class StringOpr_AWT implements ActionListener
{
	Frame f;
	Button btnRev,btnConCat;
	Label lblDisp,lblStr2;
	TextField txtStr,txtStr2;
	char ch;
	String nstr="";
	public StringOpr_AWT()
	{
		Frame f=new Frame("String Operations");
		Label lblStr=new Label("Enter a String");
		txtStr=new TextField(20); 
		lblStr2=new Label("Enter 2nd String");
		txtStr2=new TextField(20);
		btnRev=new Button("Reverse a String");
		btnConCat=new Button("Concatenate String");
		Label lblD=new Label("Result:");
		lblDisp=new Label();	
		f.add(lblStr);
		f.add(txtStr);
		f.add(lblStr2);
		f.add(txtStr2);
		f.add(btnRev);
		f.add(btnConCat);
		btnRev.addActionListener(this);
		btnConCat.addActionListener(this);
		f.add(lblD);
		f.add(lblDisp);
		f.setLayout(new GridLayout(2,1,2,2));
		f.setSize(500,100);
		f.setVisible(true);
		
	}
	public void actionPerformed(ActionEvent ae)
	{
		if(ae.getSource()==btnRev)
		{
			String str=txtStr.getText();
			
			for (int i=0;i<str.length(); i++)
			{
				ch= str.charAt(i);
				nstr= ch+nstr; 
			}
			lblDisp.setText(nstr);
		}
		else if(ae.getSource()==btnConCat)
		{
			lblDisp.setText("");
	
			String str=txtStr.getText();
			String str2=txtStr2.getText();
			str.concat(str2);
			lblDisp.setText(str.concat(str2));
			
		}
	}
	public static void main(String[] args)
	{
		new StringOpr_AWT();
	}
}

8c.write  a java program to implement exception handsing
import java.awt.*;
import java.awt.event.*;
class AWT_Factorial extends WindowAdapter implements ActionListener
{
	Frame f;
	Label lblInput;
	TextField txtNum,txtDisp;
	Button btnFact;
	Label lblDisp;
	Panel p;
	public AWT_Factorial()
	{
		f=new Frame("Calculate Factorial");
		p=new Panel();
		lblInput=new Label("Enter a number");
		txtNum=new TextField(5);
		lblDisp=new Label("Factorial=");
		txtDisp=new TextField(10);
		txtDisp.setEditable(false);
		btnFact=new Button("Calculate Factorial");
	
		p.add(lblInput);
		p.add(txtNum);
		p.add(btnFact);
		p.add(lblDisp);
		p.add(txtDisp);
		f.add(p);
		btnFact.addActionListener(this);
		f.setLayout(new FlowLayout());
		f.setSize(300,300);
		f.setVisible(true);
		f.addWindowListener(this);
	}
	public void actionPerformed(ActionEvent ae)
	{
			int num=Integer.parseInt(txtNum.getText());
			System.out.println(ae.getSource());
			int fact=1;
			for(int i=1;i<=num;i++)
			{
				fact*=i;
			}
			txtDisp.setText(Integer.toString(fact));
	}
	public void windowClosing(WindowEvent we)
	{ 
                System.exit(0);
	}
	public static void main(String[] args)
	{
		new AWT_Factorial();
	}
}